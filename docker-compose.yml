version: '2'

services:
  # meeton-ui:
  #   image: 'meeton-ui:latest'
  #   volumes:
  #     - '.:/MeetOnFrontend/app'
  #     - '/MeetOnFrontend/app/node_modules'
  #   ports:
  #     - 3000:3000

  meeton-eureka:
    image: 'zorgont35/meeton-eureka:0.3'
    ports:
      - "8761:8761"

  meeton-apg:
    image: 'zorgont35/meeton-apg:0.3'
    ports:
      - "8989:8989"
    depends_on:
      - meeton-eureka
    environment:
      eureka.client.serviceUrl.defaultZone: http://meeton-eureka:8761/eureka/
      EUREKA_INSTANCE_HOSTNAME: meeton-apg
      
  meeton-core:
    image: 'zorgont35/meeton-core:0.3'
    ports:
      - "8080:8080"
      - "5000:5005"
    depends_on:
      - db
      - meeton-eureka
    environment:
      spring.kafka.producer.bootstrap-servers: kafka:9092
      spring.kafka.consumer.bootstrap-servers: kafka:9092
      eureka.client.serviceUrl.defaultZone: http://meeton-eureka:8761/eureka/
      EUREKA_INSTANCE_HOSTNAME: meeton-core
      spring.datasource.url: jdbc:postgresql://db:5432/meeton
      spring.datasource.username: root
      spring.datasource.password: root
      spring.jpa.hibernate.ddl-auto: update

  meeton-am:
    image: 'zorgont35/meeton-am:0.3'
    ports:
      - "8081:8081"
      - "5005:5005"
    depends_on:
      - mongo
      - meeton-eureka
    environment:
      spring.kafka.producer.bootstrap-servers: kafka:9092
      eureka.client.serviceUrl.defaultZone: http://meeton-eureka:8761/eureka/
      EUREKA_INSTANCE_HOSTNAME: meeton-am
      SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE: admin
      SPRING_DATA_MONGODB_AUTO_INDEX_CREATION: 'true'
      SPRING_DATA_MONGODB_DATABASE: am-users
      SPRING_DATA_MONGODB_HOST: mongo
      SPRING_DATA_MONGODB_PORT: 27017
      SPRING_DATA_MONGODB_USERNAME: root
      SPRING_DATA_MONGODB_PASSWORD: rootpassword

  meeton-nm:
    image: 'zorgont35/meeton-nm:0.3'
    ports:
      - "8082:8082"
    depends_on:
      - mongo
      - meeton-eureka
    environment:
      spring.kafka.consumer.bootstrap-servers: kafka:9092
      eureka.client.serviceUrl.defaultZone: http://meeton-eureka:8761/eureka/
      EUREKA_INSTANCE_HOSTNAME: meeton-nm
      SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE: admin
      SPRING_DATA_MONGODB_AUTO_INDEX_CREATION: 'true'
      SPRING_DATA_MONGODB_DATABASE: nm-notification
      SPRING_DATA_MONGODB_HOST: mongo
      SPRING_DATA_MONGODB_PORT: 27017
      SPRING_DATA_MONGODB_USERNAME: root
      SPRING_DATA_MONGODB_PASSWORD: rootpassword

  meeton-rm:
    image: 'zorgont35/meeton-rm:0.3'
    ports:
      - "8083:8083"
      - "5003:5005"
    depends_on:
      - mongo
      - meeton-eureka
    environment:
      eureka.client.serviceUrl.defaultZone: http://meeton-eureka:8761/eureka/
      EUREKA_INSTANCE_HOSTNAME: meeton-rm
      SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE: admin
      SPRING_DATA_MONGODB_AUTO_INDEX_CREATION: 'true'
      SPRING_DATA_MONGODB_DATABASE: rm-rating_weight
      SPRING_DATA_MONGODB_HOST: mongo
      SPRING_DATA_MONGODB_PORT: 27017
      SPRING_DATA_MONGODB_USERNAME: root
      SPRING_DATA_MONGODB_PASSWORD: rootpassword

  meeton-rec-manager:
    image: 'zorgont35/meeton-rec-manager:0.3'
    ports:
      - "8084:8084"
      - "5004:5005"
    depends_on:
      - meeton-eureka
    environment:
      eureka.client.serviceUrl.defaultZone: http://meeton-eureka:8761/eureka/
      EUREKA_INSTANCE_HOSTNAME: meeton-rec-manager

  db:
    image: 'postgres:13.1-alpine'
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root

  mongo:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - 27018:27017
    volumes:
      - mongodb_data_container:/data/db
  
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
    - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
    - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'

volumes:
  mongodb_data_container: